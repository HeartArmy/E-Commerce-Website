{"ast":null,"code":"export const initialState = {\n  basket: [],\n  category: \"Fruits\",\n  address: {}\n};\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => item.price + amount, 0);\n\nconst reducer = (state, action) => {\n  console.log(state);\n\n  switch (action.type) {\n    case 'ADD_TO_BASKET':\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case 'REMOVE_FROM_BASKET':\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`Cant remove product (id: ${action.id}) as its not in\n                basket!`);\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    case \"SET_USER\":\n      return { ...state,\n        user: action.user\n      };\n\n    case \"EMPTY_BASKET\":\n      return { ...state,\n        basket: []\n      };\n\n    case \"SET_CATEGORY\":\n      return { ...state,\n        category: action.item\n      };\n\n    case \"SET_ADDRESS\":\n      return { ...state,\n        address: action.item\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mohammedarham/Downloads/amazon-clone/src/reducer.js"],"names":["initialState","basket","category","address","getBasketTotal","reduce","amount","item","price","reducer","state","action","console","log","type","index","findIndex","basketItem","id","newBasket","splice","warn","user"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAE;AACvBC,EAAAA,MAAM,EAAE,EADe;AAEvBC,EAAAA,QAAQ,EAAC,QAFc;AAGvBC,EAAAA,OAAO,EAAE;AAHc,CAApB;AAMP,OAAO,MAAMC,cAAc,GAAIH,MAAD,IAC5BA,MAD4B,aAC5BA,MAD4B,uBAC5BA,MAAM,CAAEI,MAAR,CAAe,CAACC,MAAD,EAASC,IAAT,KAAkBA,IAAI,CAACC,KAAL,GAAaF,MAA9C,EAAsD,CAAtD,CADK;;AAGP,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAiB;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,UAAOC,MAAM,CAACG,IAAd;AACI,SAAK,eAAL;AACI,aAAM,EACF,GAAGJ,KADD;AAEFT,QAAAA,MAAM,EAAE,CAAC,GAAGS,KAAK,CAACT,MAAV,EAAkBU,MAAM,CAACJ,IAAzB;AAFN,OAAN;;AAIJ,SAAK,oBAAL;AACI,YAAMQ,KAAK,GAAGL,KAAK,CAACT,MAAN,CAAae,SAAb,CAAwBC,UAAD,IAAcA,UAAU,CAACC,EAAX,KAAgBP,MAAM,CAACO,EAA5D,CAAd;AACA,UAAIC,SAAS,GAAG,CAAC,GAAGT,KAAK,CAACT,MAAV,CAAhB;;AACA,UAAGc,KAAK,IAAE,CAAV,EAAY;AACRI,QAAAA,SAAS,CAACC,MAAV,CAAiBL,KAAjB,EAAwB,CAAxB;AACH,OAFD,MAEK;AACDH,QAAAA,OAAO,CAACS,IAAR,CAAc,4BAA2BV,MAAM,CAACO,EAAG;AACnE,wBADgB;AAEH;;AACD,aAAM,EACF,GAAGR,KADD;AAEFT,QAAAA,MAAM,EAAEkB;AAFN,OAAN;;AAKJ,SAAK,UAAL;AACI,aAAM,EACF,GAAGT,KADD;AAEFY,QAAAA,IAAI,EAAEX,MAAM,CAACW;AAFX,OAAN;;AAIJ,SAAK,cAAL;AACI,aAAM,EACF,GAAGZ,KADD;AAEFT,QAAAA,MAAM,EAAE;AAFN,OAAN;;AAIJ,SAAK,cAAL;AACI,aAAM,EACF,GAAGS,KADD;AAEFR,QAAAA,QAAQ,EAACS,MAAM,CAACJ;AAFd,OAAN;;AAIJ,SAAK,aAAL;AACI,aAAM,EACF,GAAGG,KADD;AAEFP,QAAAA,OAAO,EAACQ,MAAM,CAACJ;AAFb,OAAN;;AAIJ;AACI,aAAOG,KAAP;AAzCR;AA2CH,CA7CD;;AAgDA,eAAeD,OAAf","sourcesContent":["export const initialState ={\r\n    basket: [],\r\n    category:\"Fruits\",\r\n    address: {}\r\n};\r\n\r\nexport const getBasketTotal = (basket) => \r\n  basket?.reduce((amount, item) => item.price + amount, 0);\r\n\r\nconst reducer = (state, action)=>{\r\n    console.log(state);\r\n    switch(action.type){\r\n        case 'ADD_TO_BASKET':\r\n            return{\r\n                ...state,\r\n                basket: [...state.basket, action.item]\r\n            }\r\n        case 'REMOVE_FROM_BASKET':\r\n            const index = state.basket.findIndex((basketItem)=>basketItem.id===action.id);\r\n            let newBasket = [...state.basket];\r\n            if(index>=0){\r\n                newBasket.splice(index, 1 );\r\n            }else{\r\n                console.warn(`Cant remove product (id: ${action.id}) as its not in\r\n                basket!`)\r\n            }\r\n            return{\r\n                ...state,\r\n                basket: newBasket\r\n\r\n            }\r\n        case \"SET_USER\":\r\n            return{\r\n                ...state,\r\n                user: action.user\r\n            }\r\n        case \"EMPTY_BASKET\":\r\n            return{\r\n                ...state,\r\n                basket: []\r\n            }\r\n        case \"SET_CATEGORY\":\r\n            return{\r\n                ...state,\r\n                category:action.item\r\n            }\r\n        case \"SET_ADDRESS\":\r\n            return{\r\n                ...state,\r\n                address:action.item\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}